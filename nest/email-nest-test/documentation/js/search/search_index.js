var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.181,1,1.949]],["body/controllers/AppController.html",[0,1.675,1,2.764,2,1.252,3,0.313,4,0.266,5,0.266,6,2.706,7,1.044,8,2.02,9,4.356,10,1.665,11,0.034,12,1.252,13,3.262,14,1.51,15,2.228,16,0.871,17,0.869,18,2.511,19,2.706,20,0.313,21,0.081,22,1.847,23,2.066,24,1.373,25,3.262,26,0.024,27,0.024]],["title/modules/AppModule.html",[28,1.181,29,1.949]],["body/modules/AppModule.html",[1,2.172,2,1.062,3,0.168,4,0.143,5,0.143,11,0.035,16,1.03,17,0.466,18,2.303,19,1.452,20,0.168,21,0.043,26,0.016,27,0.016,28,1.316,29,3.485,30,0.81,31,0.81,32,0.991,33,0.991,34,0.81,35,1.942,36,0.991,37,1.452,38,1.452,39,1.452,40,2.555,41,2.555,42,2.555,43,2.088,44,1.566,45,0.991,46,0.991,47,1.75,48,2.766,49,1.75,50,1.255,51,1.75,52,1.75,53,1.75,54,1.28,55,1.75,56,1.75,57,1.75,58,1.75,59,1.255,60,1.75,61,1.75,62,1.942,63,1.75,64,1.75,65,1.75,66,1.452,67,1.75,68,1.75,69,1.75,70,1.255,71,1.75,72,1.255,73,1.452,74,0.737,75,1.75,76,1.75,77,1.452,78,1.255,79,1.75,80,1.75,81,1.75,82,1.75,83,1.75,84,1.75,85,1.75,86,1.75,87,1.75,88,1.452,89,1.452]],["title/injectables/AppService.html",[18,1.571,90,1.181]],["body/injectables/AppService.html",[3,0.339,4,0.288,5,0.288,7,1.129,8,2.127,9,4.492,11,0.034,12,1.354,14,1.633,15,2.346,16,0.704,17,0.94,18,2.346,20,0.339,21,0.087,24,1.485,26,0.026,27,0.026,90,1.764,91,1.998,92,2.927,93,3.528,94,3.528,95,3.528]],["title/classes/CreateEmailDto.html",[21,0.076,96,1.949]],["body/classes/CreateEmailDto.html",[3,0.412,4,0.35,5,0.35,11,0.031,20,0.412,21,0.106,26,0.029,27,0.029,96,3.292,97,1.504,98,3.56,99,3.078]],["title/classes/CreateRediDto.html",[21,0.076,100,1.742]],["body/classes/CreateRediDto.html",[3,0.412,4,0.35,5,0.35,11,0.031,20,0.412,21,0.106,26,0.029,27,0.029,97,1.504,100,2.944,101,3.56,102,3.078]],["title/classes/CreateUserDto.html",[21,0.076,103,1.949]],["body/classes/CreateUserDto.html",[3,0.412,4,0.35,5,0.35,11,0.031,20,0.412,21,0.106,26,0.029,27,0.029,97,1.504,103,3.292,104,3.56,105,3.078]],["title/classes/Email.html",[21,0.076,106,1.295]],["body/classes/Email.html",[3,0.416,4,0.353,5,0.353,11,0.031,20,0.416,21,0.107,26,0.029,27,0.029,97,1.518,106,2.201,107,3.593]],["title/controllers/EmailController.html",[0,1.181,108,1.949]],["body/controllers/EmailController.html",[0,0.923,2,0.923,3,0.231,4,0.196,5,0.196,7,0.77,8,1.631,10,1.228,11,0.034,12,0.923,14,1.113,16,0.832,17,0.641,20,0.231,21,0.059,22,1.362,23,1.523,24,1.012,26,0.02,27,0.02,43,1.93,62,1.362,106,1.012,108,2.231,109,1.995,110,1.725,111,2.129,112,3.524,113,2.405,114,3.524,115,2.405,116,1.362,117,1.362,118,1.362,119,3.809,120,1.362,121,1.725,122,1.725,123,1.995,124,1.995,125,1.995,126,2.405,127,2.231,128,1.995,129,1.756,130,1.995,131,2.405,132,1.523,133,2.405,134,1.228,135,3.459,136,2.405,137,2.405,138,1.228,139,2.405,140,1.995,141,2.405,142,1.995,143,1.995,144,1.995,145,1.995]],["title/modules/EmailModule.html",[28,1.181,40,1.742]],["body/modules/EmailModule.html",[2,1.602,3,0.293,4,0.249,5,0.249,11,0.033,16,0.949,17,0.814,20,0.293,21,0.076,26,0.023,27,0.023,28,1.825,30,1.413,31,1.413,32,1.729,33,1.729,34,1.413,35,2.692,36,1.729,40,3.128,43,2.556,44,2.363,45,1.729,46,1.729,108,3.011,128,2.532,146,3.053,147,3.053,148,3.053,149,3.053]],["title/injectables/EmailService.html",[43,1.424,90,1.181]],["body/injectables/EmailService.html",[3,0.201,4,0.171,5,0.171,7,0.671,8,1.472,11,0.035,12,1.476,14,0.971,15,1.624,16,0.767,17,0.559,20,0.201,21,0.052,22,1.188,24,0.883,26,0.018,27,0.018,43,1.472,54,0.971,59,1.504,62,1.188,70,1.504,72,1.504,74,1.942,90,1.221,91,1.188,106,0.883,111,1.963,116,1.802,117,2.177,118,1.802,119,1.74,120,1.188,134,1.071,138,1.071,140,3.189,150,1.74,151,1.472,152,4.856,153,3.182,154,2.097,155,2.097,156,4.856,157,3.182,158,3.182,159,2.639,160,2.097,161,2.015,162,3.182,163,1.74,164,2.097,165,2.097,166,2.097,167,2.097,168,1.504,169,2.097,170,2.097,171,2.097,172,2.097,173,3.845,174,2.097,175,2.097,176,2.097]],["title/classes/LoginDto.html",[21,0.076,177,1.742]],["body/classes/LoginDto.html",[3,0.336,4,0.285,5,0.285,7,1.121,11,0.033,12,1.756,15,2.757,20,0.336,21,0.087,26,0.026,27,0.026,74,1.925,97,1.227,106,2.144,135,4.225,151,2.117,177,2.59,178,2.905,179,3.28,180,3.502,181,3.502]],["title/classes/Redi.html",[21,0.076,182,2.207]],["body/classes/Redi.html",[3,0.416,4,0.353,5,0.353,11,0.031,20,0.416,21,0.107,26,0.029,27,0.029,97,1.518,182,3.749,183,3.593]],["title/controllers/RedisController.html",[0,1.181,184,1.949]],["body/controllers/RedisController.html",[0,1.364,2,1.364,3,0.341,4,0.29,5,0.29,11,0.034,16,0.922,17,0.947,20,0.341,21,0.088,22,2.013,23,2.251,26,0.026,27,0.026,110,2.549,121,2.549,122,2.549,123,2.948,124,2.948,125,2.948,129,2.16,184,2.925,185,2.948,186,2.251,187,2.948,188,3.555]],["title/modules/RedisModule.html",[28,1.181,41,1.742]],["body/modules/RedisModule.html",[2,1.343,3,0.229,4,0.194,5,0.194,11,0.034,16,0.912,17,0.635,20,0.229,21,0.059,24,1.002,26,0.02,27,0.02,28,1.592,30,1.102,31,1.102,32,1.348,33,1.348,34,1.102,35,2.348,36,2.348,41,2.979,44,1.981,45,1.348,46,1.348,70,1.707,72,1.707,73,1.975,88,1.975,89,1.975,111,1.215,129,2.418,134,1.215,138,1.215,184,2.626,186,1.508,187,1.975,189,1.975,190,1.975,191,1.975,192,2.381,193,3.498,194,2.381,195,3.498,196,2.381,197,3.498,198,2.381,199,2.381,200,2.381]],["title/injectables/RedisService.html",[90,1.181,129,1.295]],["body/injectables/RedisService.html",[3,0.2,4,0.169,5,0.169,7,0.665,8,1.463,10,1.061,11,0.034,12,1.468,14,1.463,15,2.346,16,0.853,17,0.554,20,0.2,21,0.051,24,0.875,26,0.018,27,0.018,74,1.935,90,1.213,91,1.177,100,1.177,111,2.471,116,1.79,117,1.79,118,1.79,120,1.177,127,1.317,129,1.331,132,2.422,134,1.061,138,1.614,142,3.172,143,3.172,151,1.463,159,2.622,161,2.002,179,2.267,186,1.317,201,1.724,202,3.824,203,3.161,204,3.161,205,2.079,206,3.161,207,2.079,208,3.824,209,3.161,210,2.079,211,2.079,212,2.622,213,1.317,214,2.079,215,2.079,216,4.273,217,2.079,218,2.079]],["title/classes/UpdateEmailDto.html",[21,0.076,219,2.207]],["body/classes/UpdateEmailDto.html",[3,0.36,4,0.306,5,0.306,11,0.033,16,0.954,20,0.36,21,0.093,26,0.027,27,0.027,96,2.375,97,1.314,99,2.69,219,3.429,220,3.111,221,3.429,222,4.781,223,2.69,224,2.375,225,2.375,226,2.69,227,3.751]],["title/classes/UpdateRediDto.html",[21,0.076,213,1.949]],["body/classes/UpdateRediDto.html",[3,0.36,4,0.306,5,0.306,11,0.033,16,0.954,20,0.36,21,0.093,26,0.027,27,0.027,97,1.314,100,2.124,102,2.69,212,3.111,213,3.028,221,3.429,223,2.69,224,2.375,225,2.375,226,2.69,228,3.111,229,4.781]],["title/classes/UpdateUserDto.html",[21,0.076,230,2.207]],["body/classes/UpdateUserDto.html",[3,0.36,4,0.306,5,0.306,11,0.033,16,0.954,20,0.36,21,0.093,26,0.027,27,0.027,97,1.314,103,2.375,105,2.69,221,3.429,223,2.69,224,2.375,225,2.375,226,2.69,230,3.429,231,3.111,232,4.781,233,3.751]],["title/entities/User.html",[54,1.424,234,2.207]],["body/entities/User.html",[3,0.261,4,0.222,5,0.222,7,0.871,10,2.283,11,0.034,12,1.716,15,2.482,16,0.543,20,0.261,21,0.067,26,0.022,27,0.022,54,1.782,66,3.709,74,1.882,78,1.951,106,1.882,151,1.782,179,2.762,234,2.762,235,2.257,236,4.471,237,5.131,238,2.721,239,4.471,240,2.721,241,2.721,242,3.852,243,3.852,244,1.951,245,2.721,246,3.852,247,2.721]],["title/controllers/UserController.html",[0,1.181,248,1.949]],["body/controllers/UserController.html",[0,0.831,2,0.831,3,0.208,4,0.176,5,0.176,7,0.693,8,1.508,10,1.105,11,0.035,12,0.831,14,1.001,16,0.87,17,0.577,20,0.208,21,0.054,22,1.225,23,1.37,24,1.372,26,0.018,27,0.018,54,1.001,62,1.225,74,0.911,110,1.552,111,2.001,116,1.225,117,1.225,118,1.225,120,1.225,121,1.552,122,1.552,127,2.063,129,1.65,130,1.795,132,1.37,134,1.663,138,1.663,144,2.703,145,1.795,161,2.063,168,1.552,177,2.469,248,2.063,249,1.795,250,3.258,251,2.164,252,3.258,253,2.164,254,3.919,255,2.001,256,1.795,257,1.795,258,2.164,259,2.164,260,3.919,261,2.164,262,3.258,263,2.703,264,2.164,265,3.919,266,2.164,267,1.795]],["title/modules/UserModule.html",[28,1.181,42,1.742]],["body/modules/UserModule.html",[2,1.602,3,0.293,4,0.249,5,0.249,11,0.033,16,0.949,17,0.814,20,0.293,21,0.076,26,0.023,27,0.023,28,1.825,30,1.413,31,1.413,32,1.729,33,1.729,34,1.413,35,2.692,36,1.729,42,3.128,44,2.363,45,1.729,46,1.729,248,3.011,255,2.82,256,2.532,268,2.532,269,2.532,270,3.053,271,3.053]],["title/injectables/UserService.html",[90,1.181,255,1.571]],["body/injectables/UserService.html",[3,0.227,4,0.193,5,0.193,7,0.758,8,1.613,10,1.209,11,0.035,12,1.338,14,1.096,16,0.97,17,0.631,20,0.227,21,0.059,24,1.467,26,0.02,27,0.02,50,1.699,54,1.096,62,1.341,74,1.467,90,1.338,91,1.341,106,0.997,111,2.111,116,1.341,117,1.341,118,1.341,120,1.341,127,1.5,132,2.618,134,1.209,138,1.209,151,1.613,161,1.5,168,1.699,177,2.582,244,1.699,255,1.779,257,1.965,267,1.965,272,1.965,273,5.081,274,3.485,275,3.485,276,2.369,277,4.134,278,2.369,279,2.369,280,4.134,281,2.369,282,2.369]],["title/coverage.html",[283,3.009]],["body/coverage.html",[0,1.64,1,1.317,5,0.169,6,1.724,11,0.034,18,1.061,21,0.131,26,0.018,27,0.018,34,0.962,43,0.962,54,0.962,74,0.875,90,1.64,92,1.724,96,1.317,98,1.724,99,2.267,100,1.177,101,1.724,102,2.267,103,1.317,104,1.724,105,2.267,106,0.875,107,1.724,108,1.317,109,1.724,129,0.875,150,1.724,177,1.177,178,1.724,182,1.491,183,1.724,184,1.317,185,1.724,201,1.724,213,1.317,219,1.491,220,1.724,228,1.724,230,1.491,231,1.724,234,1.491,235,1.724,248,1.317,249,1.724,255,1.061,263,1.724,272,1.724,283,1.491,284,2.079,285,2.079,286,2.079,287,5.915,288,4.273,289,5.505,290,3.161,291,1.724,292,2.079,293,3.161,294,2.079,295,2.079]],["title/dependencies.html",[31,1.712,296,2.133]],["body/dependencies.html",[11,0.035,17,0.888,26,0.025,27,0.025,31,1.541,50,2.389,59,2.389,77,2.763,163,2.763,186,2.109,224,2.109,225,2.109,244,2.389,297,4.969,298,3.331,299,3.331,300,3.331,301,3.331,302,3.331,303,3.331,304,3.331,305,3.331,306,3.331,307,3.331,308,3.331,309,3.331,310,3.331,311,3.331,312,3.331,313,3.331]],["title/miscellaneous/functions.html",[314,2.133,315,3.069]],["body/miscellaneous/functions.html",[7,1.412,11,0.03,26,0.03,27,0.03,34,2.619,291,3.659,314,3.659,315,3.659,316,4.412]],["title/index.html",[7,0.823,317,2.572,318,2.572]],["body/index.html",[4,0.199,11,0.033,26,0.02,27,0.02,283,1.751,319,2.442,320,2.442,321,3.563,322,2.442,323,2.442,324,2.442,325,2.442,326,2.442,327,2.442,328,2.025,329,4.207,330,2.442,331,2.442,332,2.442,333,2.442,334,4.207,335,5.303,336,2.442,337,2.442,338,2.442,339,5.136,340,2.442,341,2.442,342,3.563,343,2.442,344,2.442,345,2.442,346,2.442,347,3.563,348,3.563,349,2.442,350,2.442,351,2.442,352,3.563,353,3.563,354,2.442,355,2.442,356,2.442,357,2.442,358,2.442,359,2.025,360,2.442,361,2.442,362,2.442,363,2.442,364,2.442,365,2.442,366,2.442,367,2.442,368,2.442,369,2.442,370,2.025,371,2.442,372,2.442,373,2.442,374,2.442,375,2.442,376,2.442,377,2.025]],["title/modules.html",[30,1.941]],["body/modules.html",[11,0.028,26,0.028,27,0.028,29,2.493,30,1.822,40,2.229,41,2.229,42,2.229,359,4.678,378,5.64,379,5.64,380,5.64]],["title/overview.html",[381,3.48]],["body/overview.html",[2,0.993,11,0.032,18,2.22,26,0.021,27,0.021,28,0.993,29,3.697,30,1.198,31,1.198,32,1.465,33,1.465,34,1.198,35,1.465,36,1.465,37,2.147,38,2.147,39,2.147,40,2.85,41,2.967,42,2.85,43,2.199,44,2.105,45,1.465,46,1.465,78,1.856,91,1.465,97,0.907,129,2.272,189,2.147,190,2.147,191,2.147,255,2.22,268,2.147,269,2.147,381,2.147,382,4.349,383,2.588,384,2.588]],["title/properties.html",[151,1.712,296,2.133]],["body/properties.html",[11,0.034,26,0.029,27,0.029,151,1.986,328,3.56,370,3.56,377,3.56,385,4.292,386,4.292,387,4.292]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":386,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":383,"title":{},"body":{"overview.html":{}}}],["10",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["10.0.0",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["202411",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["25",{"_index":166,"title":{},"body":{"injectables/EmailService.html":{}}}],["3.1.1",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":382,"title":{},"body":{"overview.html":{}}}],["4.6.12",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["6.4.14",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["6.9.8",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["6379",{"_index":199,"title":{},"body":{"modules/RedisModule.html":{}}}],["7.8.1",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":137,"title":{},"body":{"controllers/EmailController.html":{}}}],["9",{"_index":384,"title":{},"body":{"overview.html":{}}}],["address",{"_index":119,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["amazing",{"_index":360,"title":{},"body":{"index.html":{}}}],["app",{"_index":337,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":327,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":111,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":169,"title":{},"body":{"injectables/EmailService.html":{}}}],["author",{"_index":370,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authplugin",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":138,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":361,"title":{},"body":{"index.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":380,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":378,"title":{},"body":{"modules.html":{}}}],["building",{"_index":322,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":97,"title":{},"body":{"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["client",{"_index":197,"title":{},"body":{"modules/RedisModule.html":{}}}],["client.connect",{"_index":200,"title":{},"body":{"modules/RedisModule.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":146,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_emailmodule_providers",{"_index":147,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_redismodule",{"_index":189,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_exports",{"_index":191,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_providers",{"_index":190,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":268,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":269,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":135,"title":{},"body":{"controllers/EmailController.html":{},"classes/LoginDto.html":{}}}],["column",{"_index":237,"title":{},"body":{"entities/User.html":{}}}],["configmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":156,"title":{},"body":{"injectables/EmailService.html":{}}}],["connectorpackage",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":267,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["const",{"_index":134,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(configservice",{"_index":155,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/EmailController.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/EmailController.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('email",{"_index":131,"title":{},"body":{"controllers/EmailController.html":{}}}],["controller('redis",{"_index":188,"title":{},"body":{"controllers/RedisController.html":{}}}],["controller('user",{"_index":258,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":283,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":226,"title":{},"body":{"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{}}}],["createclient",{"_index":195,"title":{},"body":{"modules/RedisModule.html":{}}}],["createdatecolumn",{"_index":242,"title":{},"body":{"entities/User.html":{}}}],["createemaildto",{"_index":96,"title":{"classes/CreateEmailDto.html":{}},"body":{"classes/CreateEmailDto.html":{},"classes/UpdateEmailDto.html":{},"coverage.html":{}}}],["createredidto",{"_index":100,"title":{"classes/CreateRediDto.html":{}},"body":{"classes/CreateRediDto.html":{},"injectables/RedisService.html":{},"classes/UpdateRediDto.html":{},"coverage.html":{}}}],["createtime",{"_index":245,"title":{},"body":{"entities/User.html":{}}}],["createtransport",{"_index":162,"title":{},"body":{"injectables/EmailService.html":{}}}],["createuserdto",{"_index":103,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["data",{"_index":144,"title":{},"body":{"controllers/EmailController.html":{},"controllers/UserController.html":{}}}],["database",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":246,"title":{},"body":{"entities/User.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmailController.html":{},"injectables/RedisService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"injectables/RedisService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":125,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":328,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":338,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":211,"title":{},"body":{"injectables/RedisService.html":{}}}],["dto/login.dto",{"_index":257,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":214,"title":{},"body":{"injectables/RedisService.html":{}}}],["e2e",{"_index":349,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":323,"title":{},"body":{"index.html":{}}}],["email",{"_index":106,"title":{"classes/Email.html":{}},"body":{"classes/Email.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["email.controller",{"_index":149,"title":{},"body":{"modules/EmailModule.html":{}}}],["email.dto",{"_index":227,"title":{},"body":{"classes/UpdateEmailDto.html":{}}}],["email.dto.ts",{"_index":99,"title":{},"body":{"classes/CreateEmailDto.html":{},"classes/UpdateEmailDto.html":{},"coverage.html":{}}}],["email.service",{"_index":128,"title":{},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{}}}],["email/email.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["email/email.service",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["emailcontroller",{"_index":108,"title":{"controllers/EmailController.html":{}},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{},"coverage.html":{}}}],["emailmodule",{"_index":40,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailservice",{"_index":43,"title":{"injectables/EmailService.html":{}},"body":{"modules/AppModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["entities",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"overview.html":{}}}],["entities/user.entity",{"_index":279,"title":{},"body":{"injectables/UserService.html":{}}}],["entity",{"_index":234,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["entitymanager",{"_index":273,"title":{},"body":{"injectables/UserService.html":{}}}],["envfilepath",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":334,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":221,"title":{},"body":{"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{}}}],["extra",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":168,"title":{},"body":{"injectables/EmailService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findemail",{"_index":274,"title":{},"body":{"injectables/UserService.html":{}}}],["findemail(params",{"_index":275,"title":{},"body":{"injectables/UserService.html":{}}}],["founduser",{"_index":280,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":321,"title":{},"body":{"index.html":{}}}],["function",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":315,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('getcode",{"_index":114,"title":{},"body":{"controllers/EmailController.html":{}}}],["get(key",{"_index":204,"title":{},"body":{"injectables/RedisService.html":{}}}],["getcode",{"_index":112,"title":{},"body":{"controllers/EmailController.html":{}}}],["getcode(@query('address",{"_index":133,"title":{},"body":{"controllers/EmailController.html":{}}}],["getcode(address",{"_index":113,"title":{},"body":{"controllers/EmailController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":317,"title":{"index.html":{}},"body":{}}],["global",{"_index":193,"title":{},"body":{"modules/RedisModule.html":{}}}],["grow",{"_index":356,"title":{},"body":{"index.html":{}}}],["hasredisemail",{"_index":260,"title":{},"body":{"controllers/UserController.html":{}}}],["hello",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":367,"title":{},"body":{"index.html":{}}}],["host",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{}}}],["html",{"_index":173,"title":{},"body":{"injectables/EmailService.html":{}}}],["https://nestjs.com",{"_index":374,"title":{},"body":{"index.html":{}}}],["id",{"_index":236,"title":{},"body":{"entities/User.html":{}}}],["identifier",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"injectables/RedisService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":127,"title":{},"body":{"controllers/EmailController.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["inject('redis_client",{"_index":209,"title":{},"body":{"injectables/RedisService.html":{}}}],["injectable",{"_index":90,"title":{"injectables/AppService.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectentitymanager",{"_index":277,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":333,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":336,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["jinchengz202011@163.com",{"_index":176,"title":{},"body":{"injectables/EmailService.html":{}}}],["join",{"_index":363,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":371,"title":{},"body":{"index.html":{}}}],["key",{"_index":142,"title":{},"body":{"controllers/EmailController.html":{},"injectables/RedisService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":377,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":353,"title":{},"body":{"index.html":{}}}],["literal",{"_index":159,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RedisService.html":{}}}],["localhost",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["logging",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":250,"title":{},"body":{"controllers/UserController.html":{}}}],["login(@body",{"_index":259,"title":{},"body":{"controllers/UserController.html":{}}}],["login(params",{"_index":251,"title":{},"body":{"controllers/UserController.html":{}}}],["logindto",{"_index":177,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.random().tostring().substring(2",{"_index":136,"title":{},"body":{"controllers/EmailController.html":{}}}],["message",{"_index":145,"title":{},"body":{"controllers/EmailController.html":{},"controllers/UserController.html":{}}}],["metadata",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":314,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":352,"title":{},"body":{"index.html":{}}}],["mode",{"_index":342,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":366,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":372,"title":{},"body":{"index.html":{}}}],["name",{"_index":117,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":329,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":376,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":224,"title":{},"body":{"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":263,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["node.js",{"_index":320,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":163,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["npm",{"_index":335,"title":{},"body":{"index.html":{}}}],["number",{"_index":179,"title":{},"body":{"classes/LoginDto.html":{},"injectables/RedisService.html":{},"entities/User.html":{}}}],["open",{"_index":354,"title":{},"body":{"index.html":{}}}],["optional",{"_index":118,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":381,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":296,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":124,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["params",{"_index":161,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["params.code",{"_index":264,"title":{},"body":{"controllers/UserController.html":{}}}],["params.email",{"_index":282,"title":{},"body":{"injectables/UserService.html":{}}}],["partialtype",{"_index":223,"title":{},"body":{"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createemaildto",{"_index":222,"title":{},"body":{"classes/UpdateEmailDto.html":{}}}],["partialtype(createredidto",{"_index":229,"title":{},"body":{"classes/UpdateRediDto.html":{}}}],["partialtype(createuserdto",{"_index":232,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":171,"title":{},"body":{"injectables/EmailService.html":{}}}],["password",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":123,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{}}}],["please",{"_index":364,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["port",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{}}}],["post",{"_index":121,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":252,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":110,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":239,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":132,"title":{},"body":{"controllers/EmailController.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["production",{"_index":344,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":319,"title":{},"body":{"index.html":{}}}],["project",{"_index":355,"title":{},"body":{"index.html":{}}}],["properties",{"_index":151,"title":{"properties.html":{}},"body":{"injectables/EmailService.html":{},"classes/LoginDto.html":{},"injectables/RedisService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["query",{"_index":126,"title":{},"body":{"controllers/EmailController.html":{}}}],["queryres",{"_index":265,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":365,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/EmailController.html":{},"controllers/RedisController.html":{},"controllers/UserController.html":{}}}],["redi",{"_index":182,"title":{"classes/Redi.html":{}},"body":{"classes/Redi.html":{},"coverage.html":{}}}],["redi.dto",{"_index":212,"title":{},"body":{"injectables/RedisService.html":{},"classes/UpdateRediDto.html":{}}}],["redi.dto.ts",{"_index":102,"title":{},"body":{"classes/CreateRediDto.html":{},"classes/UpdateRediDto.html":{},"coverage.html":{}}}],["redis",{"_index":186,"title":{},"body":{"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"dependencies.html":{}}}],["redis.controller",{"_index":194,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.service",{"_index":187,"title":{},"body":{"controllers/RedisController.html":{},"modules/RedisModule.html":{}}}],["redis/redis.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_client",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{}}}],["redisclient",{"_index":202,"title":{},"body":{"injectables/RedisService.html":{}}}],["redisclienttype",{"_index":208,"title":{},"body":{"injectables/RedisService.html":{}}}],["rediscontroller",{"_index":184,"title":{"controllers/RedisController.html":{}},"body":{"controllers/RedisController.html":{},"modules/RedisModule.html":{},"coverage.html":{}}}],["redismodule",{"_index":41,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redisservice",{"_index":129,"title":{"injectables/RedisService.html":{}},"body":{"controllers/EmailController.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["reflect",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":332,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["root",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":339,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":324,"title":{},"body":{"index.html":{}}}],["secure",{"_index":167,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail",{"_index":153,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendmail(params",{"_index":158,"title":{},"body":{"injectables/EmailService.html":{}}}],["server",{"_index":325,"title":{},"body":{"index.html":{}}}],["set",{"_index":203,"title":{},"body":{"injectables/RedisService.html":{}}}],["set(params",{"_index":206,"title":{},"body":{"injectables/RedisService.html":{}}}],["sha256_password",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["side",{"_index":326,"title":{},"body":{"index.html":{}}}],["smtp.163.com",{"_index":165,"title":{},"body":{"injectables/EmailService.html":{}}}],["socket",{"_index":198,"title":{},"body":{"modules/RedisModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateEmailDto.html":{},"classes/CreateRediDto.html":{},"classes/CreateUserDto.html":{},"classes/Email.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"classes/Redi.html":{},"controllers/RedisController.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":358,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.env",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["src/email/dto/create",{"_index":98,"title":{},"body":{"classes/CreateEmailDto.html":{},"coverage.html":{}}}],["src/email/dto/update",{"_index":220,"title":{},"body":{"classes/UpdateEmailDto.html":{},"coverage.html":{}}}],["src/email/email.controller.ts",{"_index":109,"title":{},"body":{"controllers/EmailController.html":{},"coverage.html":{}}}],["src/email/email.controller.ts:23",{"_index":115,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/email/email.module.ts",{"_index":148,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/email/email.service.ts",{"_index":150,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email.service.ts:22",{"_index":160,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email.service.ts:8",{"_index":157,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/entities/email.entity.ts",{"_index":107,"title":{},"body":{"classes/Email.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/redis/dto/create",{"_index":101,"title":{},"body":{"classes/CreateRediDto.html":{},"coverage.html":{}}}],["src/redis/dto/update",{"_index":228,"title":{},"body":{"classes/UpdateRediDto.html":{},"coverage.html":{}}}],["src/redis/entities/redi.entity.ts",{"_index":183,"title":{},"body":{"classes/Redi.html":{},"coverage.html":{}}}],["src/redis/redis.controller.ts",{"_index":185,"title":{},"body":{"controllers/RedisController.html":{},"coverage.html":{}}}],["src/redis/redis.module.ts",{"_index":192,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.service",{"_index":130,"title":{},"body":{"controllers/EmailController.html":{},"controllers/UserController.html":{}}}],["src/redis/redis.service.ts",{"_index":201,"title":{},"body":{"injectables/RedisService.html":{},"coverage.html":{}}}],["src/redis/redis.service.ts:11",{"_index":205,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:15",{"_index":207,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/redis/redis.service.ts:9",{"_index":210,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/user/dto/create",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts",{"_index":178,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/user/dto/login.dto.ts:2",{"_index":181,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/user/dto/login.dto.ts:3",{"_index":180,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/user/dto/update",{"_index":231,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":235,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":241,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":238,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:24",{"_index":240,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.controller.ts",{"_index":249,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:21",{"_index":253,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":270,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":272,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":278,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:13",{"_index":276,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":340,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":343,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":345,"title":{},"body":{"index.html":{}}}],["started",{"_index":318,"title":{"index.html":{}},"body":{}}],["starter",{"_index":331,"title":{},"body":{"index.html":{}}}],["statements",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":368,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"injectables/RedisService.html":{},"entities/User.html":{}}}],["subject",{"_index":140,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["support",{"_index":359,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":379,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["sys",{"_index":175,"title":{},"body":{"injectables/EmailService.html":{}}}],["table",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":348,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":351,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":350,"title":{},"body":{"index.html":{}}}],["tests",{"_index":347,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":357,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('email_password",{"_index":172,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.configservice.get('email_user",{"_index":170,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.emailservice.sendmail",{"_index":139,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.entitymanager.findoneby(user",{"_index":281,"title":{},"body":{"injectables/UserService.html":{}}}],["this.redisclient.expire(key",{"_index":218,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.get(key",{"_index":215,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisclient.set(key",{"_index":217,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.redisservice.get(params.email",{"_index":261,"title":{},"body":{"controllers/UserController.html":{}}}],["this.redisservice.set",{"_index":141,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.transporter",{"_index":164,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.transporter.sendmail",{"_index":174,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.userservice.findemail(params",{"_index":266,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":262,"title":{},"body":{"controllers/UserController.html":{}}}],["touch",{"_index":369,"title":{},"body":{"index.html":{}}}],["transporter",{"_index":152,"title":{},"body":{"injectables/EmailService.html":{}}}],["true",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ttl",{"_index":216,"title":{},"body":{"injectables/RedisService.html":{}}}],["twitter",{"_index":375,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"classes/LoginDto.html":{},"injectables/RedisService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["typeorm",{"_index":244,"title":{},"body":{"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":225,"title":{},"body":{"classes/UpdateEmailDto.html":{},"classes/UpdateRediDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/nodemailer",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":330,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":254,"title":{},"body":{"controllers/UserController.html":{}}}],["unit",{"_index":346,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":120,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RedisService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":387,"title":{},"body":{"properties.html":{}}}],["updatedatecolumn",{"_index":243,"title":{},"body":{"entities/User.html":{}}}],["updateemaildto",{"_index":219,"title":{"classes/UpdateEmailDto.html":{}},"body":{"classes/UpdateEmailDto.html":{},"coverage.html":{}}}],["updateredidto",{"_index":213,"title":{"classes/UpdateRediDto.html":{}},"body":{"injectables/RedisService.html":{},"classes/UpdateRediDto.html":{},"coverage.html":{}}}],["updatetime",{"_index":247,"title":{},"body":{"entities/User.html":{}}}],["updateuserdto",{"_index":230,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["usefactory",{"_index":196,"title":{},"body":{"modules/RedisModule.html":{}}}],["user",{"_index":54,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":271,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":233,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.service",{"_index":256,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/entities/user.entity",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["user_email",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":248,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":42,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["userservice",{"_index":255,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":143,"title":{},"body":{"controllers/EmailController.html":{},"injectables/RedisService.html":{}}}],["version",{"_index":385,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":341,"title":{},"body":{"index.html":{}}}],["website",{"_index":373,"title":{},"body":{"index.html":{}}}],["world",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":362,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nAppModule -->\n\nEmailService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './user/user.module';\nimport { RedisModule } from './redis/redis.module';\nimport { User } from './user/entities/user.entity';\nimport { EmailModule } from './email/email.module';\nimport { EmailService } from './email/email.service';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: 'src/.env',\n    }),\n    UserModule,\n    RedisModule,\n    TypeOrmModule.forRoot({\n      username: 'root',\n      password: '202411',\n      port: 3306,\n      host: 'localhost',\n      type: 'mysql',\n      connectorPackage: 'mysql2',\n      entities: [User],\n      logging: true,\n      synchronize: true,\n      poolSize: 10,\n      extra: {\n        authPlugin: 'sha256_password',\n      },\n      database: 'user_email',\n    }),\n    EmailModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    EmailService,\n    // {\n    //   provide: 'REDIS_CLIENT',\n    // },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmailDto.html":{"url":"classes/CreateEmailDto.html","title":"class - CreateEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/dto/create-email.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEmailDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRediDto.html":{"url":"classes/CreateRediDto.html","title":"class - CreateRediDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRediDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/dto/create-redi.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRediDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email.html":{"url":"classes/Email.html","title":"class - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/entities/email.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Email {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailController.html":{"url":"controllers/EmailController.html","title":"controller - EmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                email\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode(address)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getCode')\n                \n            \n\n                    \n                        \n                            Defined in src/email/email.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n  Inject,\n} from '@nestjs/common';\nimport { EmailService } from './email.service';\nimport { RedisService } from 'src/redis/redis.service';\n\n@Controller('email')\nexport class EmailController {\n  constructor(private readonly emailService: EmailService) {}\n\n  @Inject()\n  private redisService: RedisService;\n\n  @Get('getCode')\n  async getCode(@Query('address') address) {\n    const code = Math.random().toString().substring(2, 8);\n\n    await this.emailService.sendMail({\n      to: address,\n      subject: '验证码：' + code,\n    });\n\n    this.redisService.set({ key: address, value: code });\n\n    return {\n      data: true,\n      message: '',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_providers\n\n\n\n\nEmailService\n\nEmailService\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmailService } from './email.service';\nimport { EmailController } from './email.controller';\n\n@Module({\n  controllers: [EmailController],\n  providers: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/email/email.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transporter\n\n                    \n                \n                    \n                        \n                                Defined in src/email/email.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Transporter, createTransport } from 'nodemailer';\n\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class EmailService {\n  transporter: Transporter;\n\n  constructor(private configService: ConfigService) {\n    this.transporter = createTransport({\n      host: 'smtp.163.com',\n      port: 25,\n      secure: false,\n      auth: {\n        user: this.configService.get('email_user'),\n        pass: this.configService.get('email_password'),\n      },\n    });\n  }\n\n  async sendMail(params: { to: string; subject: string; html?: any }) {\n    const { to, subject, html } = params;\n    await this.transporter.sendMail({\n      from: {\n        name: 'sys email',\n        address: 'jinchengz202011@163.com',\n      },\n      to,\n      subject,\n      html,\n    });\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n  email: string;\n  code: string | number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Redi.html":{"url":"classes/Redi.html","title":"class - Redi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Redi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/entities/redi.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Redi {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RedisController.html":{"url":"controllers/RedisController.html","title":"controller - RedisController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RedisController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/redis.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                redis\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { RedisService } from './redis.service';\n\n@Controller('redis')\nexport class RedisController {\n  constructor(private readonly redisService: RedisService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RedisModule_exports\n\n\n\n\nRedisService \n\nRedisService \n\n\n\nRedisModule\n\nRedisModule\n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RedisController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RedisService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { RedisService } from './redis.service';\nimport { RedisController } from './redis.controller';\nimport { createClient } from 'redis';\n\n@Global()\n@Module({\n  controllers: [RedisController],\n  providers: [\n    RedisService,\n    {\n      provide: 'REDIS_CLIENT',\n      async useFactory() {\n        const client = createClient({\n          socket: {\n            host: 'localhost',\n            port: 6379,\n          },\n        });\n\n        await client.connect();\n\n        return client;\n      },\n    },\n  ],\n  exports: [RedisService],\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/redis/redis.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisClientType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('REDIS_CLIENT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/redis/redis.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { CreateRediDto } from './dto/create-redi.dto';\nimport { UpdateRediDto } from './dto/update-redi.dto';\nimport { RedisClientType } from 'redis';\n\n@Injectable()\nexport class RedisService {\n  @Inject('REDIS_CLIENT')\n  private redisClient: RedisClientType;\n\n  async get(key: string) {\n    return this.redisClient.get(key);\n  }\n\n  async set(params: { key: string; value: string | number; ttl?: number }) {\n    const { key, value, ttl } = params;\n\n    await this.redisClient.set(key, value);\n\n    if (ttl) {\n      await this.redisClient.expire(key, ttl);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmailDto.html":{"url":"classes/UpdateEmailDto.html","title":"class - UpdateEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/dto/update-email.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateEmailDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateEmailDto } from './create-email.dto';\n\nexport class UpdateEmailDto extends PartialType(CreateEmailDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRediDto.html":{"url":"classes/UpdateRediDto.html","title":"class - UpdateRediDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRediDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/dto/update-redi.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRediDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRediDto } from './create-redi.dto';\n\nexport class UpdateRediDto extends PartialType(CreateRediDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  //   CreateDateColumn,\n  //   UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  Column,\n} from 'typeorm';\n\n@Entity()\nexport class User {\n  @Column()\n  userName: string;\n\n  @Column()\n  email: string;\n\n  //   @CreateDateColumn()\n  //   createTime: Date;\n\n  //   @UpdateDateColumn()\n  //   updateTime: Date;\n\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(params: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Inject,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RedisService } from 'src/redis/redis.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Inject()\n  private redisService: RedisService;\n\n  @Post('login')\n  async login(@Body() params: LoginDto) {\n    const hasRedisEmail = await this.redisService.get(params.email);\n\n    if (!hasRedisEmail) {\n      throw new UnauthorizedException('验证码失效');\n    }\n\n    if (hasRedisEmail !== params.code) {\n      throw new UnauthorizedException('验证码错误');\n    }\n\n    const queryRes = await this.userService.findEmail(params);\n    console.log({ queryRes });\n\n    if (queryRes) {\n      return {\n        data: true,\n      };\n    }\n\n    return {\n      data: false,\n      message: '邮箱未注册～',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                entityManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmail(params: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        entityManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityManager\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectEntityManager()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { EntityManager } from 'typeorm';\n\nimport { LoginDto } from './dto/login.dto';\nimport { User } from './entities/user.entity';\nimport { InjectEntityManager } from '@nestjs/typeorm';\n\n@Injectable()\nexport class UserService {\n  @InjectEntityManager()\n  private entityManager: EntityManager;\n\n  async findEmail(params: LoginDto) {\n    const foundUser = await this.entityManager.findOneBy(User, {\n      email: params.email,\n    });\n    console.log({ foundUser });\n\n    if (foundUser) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/email/dto/create-email.dto.ts\n            \n            class\n            CreateEmailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/email/dto/update-email.dto.ts\n            \n            class\n            UpdateEmailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/email/email.controller.ts\n            \n            controller\n            EmailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/email/entities/email.entity.ts\n            \n            class\n            Email\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/dto/create-redi.dto.ts\n            \n            class\n            CreateRediDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/dto/update-redi.dto.ts\n            \n            class\n            UpdateRediDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/entities/redi.entity.ts\n            \n            class\n            Redi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/redis.controller.ts\n            \n            controller\n            RedisController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/redis.service.ts\n            \n            injectable\n            RedisService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @types/nodemailer : ^6.4.14\n        \n            mysql2 : ^3.9.0\n        \n            nodemailer : ^6.9.8\n        \n            redis : ^4.6.12\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nRedisService \n\nRedisService \n\nRedisService  -->\n\nRedisModule->RedisService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\nAppModule -->\n\nEmailService->AppModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
